package com.smartbear.ccollab.service.api.v7001;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.6.2
 * 2012-09-20T15:21:45.951+04:00
 * Generated source version: 2.6.2
 */
@WebServiceClient(name = "CollabSoap7001Service",
        wsdlLocation = "file:/C:/projects/collabbug/src/main/java/com/smartbear/ccollab/service/api/v7001/CodeCollaborator_7001.wsdl",
        targetNamespace = "http://v7001.api.service.ccollab.smartbear.com/")
public class CollabSoap7001Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://v7001.api.service.ccollab.smartbear.com/", "CollabSoap7001Service");
    public final static QName CollabSoap7001Port = new QName("http://v7001.api.service.ccollab.smartbear.com/", "CollabSoap7001Port");

    static {
        URL url = null;
        try {
            url = new URL("file:/C:/projects/collabbug/src/main/java/com/smartbear/ccollab/service/api/v7001/CodeCollaborator_7001.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CollabSoap7001Service.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "file:/C:/projects/collabbug/src/main/java/com/smartbear/ccollab/service/api/v7001/CodeCollaborator_7001.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CollabSoap7001Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CollabSoap7001Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CollabSoap7001Service() {
        super(WSDL_LOCATION, SERVICE);
    }


    /**
     * @return returns CodeCollaborator
     */
    @WebEndpoint(name = "CollabSoap7001Port")
    public CodeCollaborator getCollabSoap7001Port() {
        return super.getPort(CollabSoap7001Port, CodeCollaborator.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns CodeCollaborator
     */
    @WebEndpoint(name = "CollabSoap7001Port")
    public CodeCollaborator getCollabSoap7001Port(WebServiceFeature... features) {
        return super.getPort(CollabSoap7001Port, CodeCollaborator.class, features);
    }

}
